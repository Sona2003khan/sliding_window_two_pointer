import java.util.HashMap;

public class sliding_window1 {
    public static int longest_Substring_Without_Repeating_character(String s) {    
        int n=s.length();
        HashMap<Character ,Integer> map=new HashMap<>();
        int left=0;
        int max=Integer.MIN_VALUE;

        for(int right=0;right<n;right++){
            char ch=s.charAt(right);

            if(map.containsKey(ch) && map.get(ch )>= left){
                left=map.get(ch)+1;
            }
            map.put(ch ,right);
            max=Math.max(max, right-left+1);
        }
        return max;
    }

    public static void main(String[] args) {
        String s="aaabbbccc";
        int result=longest_Substring_Without_Repeating_character(s);
        System.out.println(result);
    }
}
