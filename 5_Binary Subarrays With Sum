public class sliding_window_5 {

    public static int binary_sub_with_sum(int nums[], int goal){
        int n=nums.length;
        int left=0;
        int count=0;
        int sum=0;
        int ans=0;

        for(int right=0;right<n;right++){
            sum += nums[right];
            count=0;
            while(sum==goal && left<=right){
                if(nums[left]==1){
                    sum--;
                }
                left++;
                count++;
            }
            ans+=count;
        }
        return ans; 
    }
    
    public static void main(String[] args) {
        int nums[]={1, 1, 0, 1, 0, 0, 1};
        int goal=3;
        int result=binary_sub_with_sum(nums, goal);
        System.out.println(result+"");
    }
}
 public int numSubarraysWithSum(int[] nums, int goal) {
        HashMap<Integer, Integer> prefixSumMap = new HashMap<>();
        int sum = 0, count = 0;

        prefixSumMap.put(0, 1);

        for (int i=0;i<nums.length;i++) {
            sum += nums[i];

            if (prefixSumMap.containsKey(sum - goal)) {
                count += prefixSumMap.get(sum - goal);
            }

            prefixSumMap.put(sum, prefixSumMap.getOrDefault(sum, 0) + 1);
        }

        return count;
    }
