import java.util.HashMap;

public class sliding_window_9 {
    public static int longest_substring_with_atmost_k_distinct_chars(String s, int k) {
        int n = s.length();
        int left = 0, maxLen = 0;
        HashMap<Character, Integer> map = new HashMap<>();

        for (int right = 0; right < n; right++) {
            char rightChar = s.charAt(right);
            map.put(rightChar, map.getOrDefault(rightChar, 0) + 1);

            // If distinct chars > k, shrink window from left
            while (map.size() > k) {
                char leftChar = s.charAt(left);
                map.put(leftChar, map.get(leftChar) - 1);
                if (map.get(leftChar) == 0) {
                    map.remove(leftChar);
                }
                left++;
            }

            maxLen = Math.max(maxLen, right - left + 1);
        }

        return maxLen;
    }

    public static void main(String[] args) {
        String s = "aababbcaacc";
        int k = 2;
        int result = longest_substring_with_atmost_k_distinct_chars(s, k);
        System.out.println(result);  // Output: 6
    }
}
